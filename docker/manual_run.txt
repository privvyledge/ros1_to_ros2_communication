# 1. Start the ROS1_bridge in one terminal
* jetson-containers run -v /dev:/dev --ipc host --env="QT_X11_NO_MITSHM=1" --env VEHICLE_NAME=$VEHICLE_NAME --env USER=$VEHICLE_NAME --env ROS_MASTER_URI=${ROS_MASTER_URI} --env ROS_IP=${ROS_IP} --env RMW_IMPLEMENTATION=rmw_fastrtps_cpp --env NAMESPACE=${NAMESPACE:-/$VEHICLE_NAME} -v ${HOME}/bolus_ws/ros1_to_ros2_communication/topics_to_bridge.yaml:/topics_to_bridge.yaml:ro --privileged privvyledge/ros:foxy-ros1-bridge /bin/bash -c "source /opt/ros/noetic/setup.bash && envsubst < /topics_to_bridge.yaml > /namespaced_topics_to_bridge.yaml && rosparam load /namespaced_topics_to_bridge.yaml && source /opt/ros/foxy/setup.bash && source ~/ros1_bridge_ws/install/setup.bash && ros2 run ros1_bridge parameter_bridge __name:=ros1_bridge_${VEHICLE_NAME}"

# 2. Start the ROS2 nodes in another terminal
* jetson-containers run -v /dev:/dev --ipc host --env="QT_X11_NO_MITSHM=1" --env VEHICLE_NAME=$VEHICLE_NAME --env USER=$VEHICLE_NAME --env ROS_LOCALHOST_ONLY=0 --env ROS_DOMAIN_ID=0 --env RMW_IMPLEMENTATION=rmw_fastrtps_cpp --env NAMESPACE=${NAMESPACE:-/$VEHICLE_NAME} -v ${HOME}/bolus_ws/ros1_to_ros2_communication/topics_to_bridge.yaml:/topics_to_bridge.yaml:ro --privileged privvyledge/f1tenth:humble-latest /bin/bash -c "ros2 launch f1tenth_launch teleop.launch.py launch_localization:=False launch_vehicle:=True launch_sensors:=False use_f1tenth_namespace:=True"
